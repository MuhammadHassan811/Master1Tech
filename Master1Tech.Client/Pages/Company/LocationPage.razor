<!--LocationsComponent.razor-->
@page "/locationpage"
@using Master1Tech.Models
@using Master1Tech.Services
@inject ICompanyService CompanyService

<div class="locations-container">
<h2>Locations</h2>
<div class="locations-content">
<div class="location-info">
<h3>HEADQUARTERS</h3>
<p>@HeadquartersLocation.Address</p>
<p>@HeadquartersLocation.Country</p>
<p>@HeadquartersLocation.City@HeadquartersLocation.PostalCode</p>
<p>@HeadquartersLocation.Country</p>

<h3 style="margin-top:30px;">OTHERLOCATIONS</h3>

@foreach(var location in OtherLocations)
{
<div class="location-item">
<p>@location.Address</p>
<p>@location.Country</p>
<p>@location.City
    @location.PostalCode</p>
<p>@location.Country</p>
</div>
}</div>
<div class="map-placeholder">
<p>Mapwouldbedisplayedhere</p>
<p>@MapCoordinates</p>
<button class="view-map-btn"@onclick="ViewLargerMap">Viewlargermap</button>
</div>
</div>
</div>

@code

{


[
Parameter
]


public

LocationInfo
HeadquartersLocation
{

get
;

set
;

}

=

new

LocationInfo


{

Address
=

"Near6thRoadRawalpindi,"
,

City
=

"Islamabad"
,

PostalCode
=

"4600"
,

Country
=

"Pakistan"


}
;



[
Parameter
]


public

List
<
LocationInfo
>
OtherLocations
{

get
;

set
;

}

=

new

List
<
LocationInfo
>


{


new

LocationInfo


{

Address
=

"AshSharafiyahJeddah,"
,

City
=

"Jeddah"
,

PostalCode
=

"23218"
,

Country
=

"SaudiArabia"


}


}
;



[
Parameter
]


public

string
MapCoordinates
{

get
;

set
;

}

=

"33°38'34.8\"N73°04'00.6\"E"
;



[
Parameter
]


public

EventCallback
OnViewLargerMap
{

get
;

set
;

}



private

async

Task

ViewLargerMap
(
)


{


await
OnViewLargerMap
.
InvokeAsync
(
)
;


}



public

class

LocationInfo


{


public

string
Address
{

get
;

set
;

}

=

""
;


public

string
City
{

get
;

set
;

}

=

""
;


public

string
PostalCode
{

get
;

set
;

}

=

""
;


public

string
Country
{

get
;

set
;

}

=

""
;


}

}


<style>
.locations-container{
padding:30px;
animation:fadeIn0.3sease-in-out;
}

@@keyframes fadeIn{
from{opacity:0;transform:translateY(10px);}
to{opacity:1;transform:translateY(0);}
}

.locations-containerh2{
color:#333;
margin-bottom:20px;
font-size:1.8em;
border-bottom:2pxsolid#007bff;
padding-bottom:10px;
}

.locations-content{
display:grid;
grid-template-columns:1fr1fr;
gap:30px;
margin-top:20px;
}

.location-infoh3{
color:#333;
font-size:1.1em;
margin-bottom:10px;
font-weight:600;
}

.location-infop{
color:#666;
margin:5px0;
line-height:1.4;
}

.location-item{
margin-bottom:20px;
padding-bottom:15px;
border-bottom:1pxsolid#eee;
}

.location-item:last-child{
border-bottom:none;
}

.map-placeholder{
background-color:#f0f0f0;
border:2pxdashed#ccc;
border-radius:8px;
padding:40px;
text-align:center;
color:#666;
min-height:200px;
display:flex;
flex-direction:column;
justify-content:center;
}

.view-map-btn{
background-color:#007bff;
color:white;
border:none;
padding:10px20px;
border-radius:4px;
cursor:pointer;
margin-top:10px;
font-size:14px;
transition:background-color0.3sease;
}

.view-map-btn:hover{
background-color:#0056b3;
}

@@media(max-width:768px){
.locations-content{
grid-template-columns:1fr;
}

.locations-container{
padding:20px;
}
}
</style>