<!-- PortfolioComponent.razor -->
@using Master1Tech.Models

<div class="portfolio-container">
    <h2>Portfolio</h2>
    
    <div class="portfolio-filters">
      @*   <button class="filter-btn @(activeFilter == "all" ? "active" : "")"  @onclick="() => SetFilter("all")">All Projects</button> *@
@foreach(var category in GetCategories()){
    <button class="filter-btn @(activeFilter == category ? "active":"")" @onclick="() => SetFilter(category)"> @category</button>
}
</div>
<div class="portfolio-grid">
        @foreach(var project in GetFilteredProjects()){
            <div class="portfolio-item" @onclick="() => ViewProjectDetails(project)">
<div class="project-image">
    @if(!string.IsNullOrEmpty(project.ImageUrl)){                       
    <img src="@project.ImageUrl" alt="@project.Title"/>
    }
    else
    {
    <div class="image-placeholder"><span>@project.Title.Substring(0,1)
        </span>
    </div>                   
    }
                  
<div class="project-overlay">                       
<button class="view-btn">View Details</button>                    
</div>                
</div>
               
<div class="project-info">

                    
<h3>@project.Title</h3>
<p class="project-category">@project.Category</p>

                    
<p class="project-description">@project.Description</p>

                    
<div class="tech-tags">
@foreach(var tech in project.Technologies)                       
{                           
<span class="tech-tag">@tech</span>
}
</div>                   
<div class="project-meta">                   
<span class="project-duration">@project.Duration
</span>

                        
<span class="project-status @project.Status.ToLower()">
@project.Status
</span>

                    
</div>

                
</div>

            
</div>

        
}

    </div>

    
@if(FilteredProjects.Count == 0)
{
<div class="no-projects">          
<p>
No projects found for the selected filter.
</p>

        
</div>

    
}

</div>

@code
 
{

    
[Parameter]
public List<PortfolioProject> Projects {get; set;} = new List
<PortfolioProject>
{ new PortfolioProject  { Title ="E-commerce Platform", Category = "Web Development", Description ="Full-stack web application built with .NET and React for online retail business",

            Technologies = new List<string>{".NET","React","SQL Server","Azure"},
                Duration ="6 months", Status ="Completed",ImageUrl =""

},

        
new PortfolioProject    
{Title ="Mobile Banking App", Category ="Mobile Development",Description ="Cross-platform mobile application for financial services with secure transactions",Technologies =
 
new List<string>{
 "Xamarin","Azure","API","SQLite"},Duration ="8 months",Status ="Completed",ImageUrl = ""
}, new PortfolioProject
{Title ="Healthcare Management System",Category ="Web Development",Description ="Web-based system for hospital management and patient records with real-time updates",Technologies = new
List<string>{"Blazor","Entity Framework","Azure SQL","SignalR"},Duration ="10 months",Status ="Completed"
,ImageUrl =""}
,new PortfolioProject
{Title ="Restaurant POS System", Category 
="Desktop Application",Description ="Point of sale system for restaurants with inventory management and reporting",Technologies =
 new List<string>
 {"WPF","C#","SQL Server","Crystal Reports"},Duration ="4 months",Status ="Completed",ImageUrl =""},
new PortfolioProject
{Title ="Learning Management System",Category ="Web Development",Description ="Online learning platform with video streaming and assessment tools",Technologies = new
 
List<string>{"ASP.NET Core","Angular","MongoDB","Redis"},Duration ="12 months", Status ="In Progress",ImageUrl =""
},
new PortfolioProject
{Title = "Inventory Management App", Category ="Mobile Development", Description ="Mobile app for warehouse inventory tracking with barcode scanning",Technologies = new List<string> { "React Native","Node.js","PostgreSQL","Firebase"}
,Duration = "5 months"
,Status ="Completed"
, ImageUrl =""        }};


    
[Parameter]
public EventCallback<PortfolioProject> OnProjectClick {get; set;}


    
private string activeFilter ="all";

private List<PortfolioProject> FilteredProjects =>GetFilteredProjects();


    
private void SetFilter(string filter)
{
activeFilter =filter;
}


    
private List<string>GetCategories()   
{       
return Projects.Select(p =>p.Category).Distinct().ToList();
}


    
private List <PortfolioProject>
 GetFilteredProjects()
   
{       
if (activeFilter == "all")

            
return Projects;
      
return Projects.Where(p =>p.Category == activeFilter).ToList();

    
}


    
private async Task ViewProjectDetails(PortfolioProject project){
       
await OnProjectClick.InvokeAsync(project);    
}


    
public class PortfolioProject   {  

  public string Title { get; set;}="";

        
public
 
string
 Category 
{
 
get
;
 
set
;
 
}
 
=
 
""
;

        
public
 
string
 Description 
{
 
get
;
 
set
;
 
}
 
=
 
""
;

        
public
 
List
<
string
>
 Technologies 
{
 
get
;
 
set
;
 
}
 
=
 
new
(
)
;

        
public string Duration {get;set;}="";

        
public string Status {get;set;}="";

        
public string ImageUrl {get; set;}="";

        
public string ClientName {get;set;}="";

        
public string ProjectUrl {get ; set;} = "";

    
}

}


<style>
    .portfolio-container {
        padding: 30px;
        animation: fadeIn 0.3s ease-in-out;
    }

    @@keyframes fadeIn {
        from { opacity: 0; transform: translateY(10px); }
        to { opacity: 1; transform: translateY(0); }
    }

    .portfolio-container h2 {
        color: #333;
        margin-bottom: 20px;
        font-size: 1.8em;
        border-bottom: 2px solid #007bff;
        padding-bottom: 10px;
    }

    .portfolio-filters {
        display: flex;
        gap: 10px;
        margin-bottom: 30px;
        flex-wrap: wrap;
    }

    .filter-btn {
        background-color: #f8f9fa;
        border: 1px solid #dee2e6;
        padding: 8px 16px;
        border-radius: 20px;
        cursor: pointer;
        font-size: 14px;
        transition: all 0.3s ease;
        color: #495057;
    }

    .filter-btn:hover {
        background-color: #e9ecef;
        border-color: #adb5bd;
    }

    .filter-btn.active {
        background-color: #007bff;
        color: white;
        border-color: #007bff;
    }

    .portfolio-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
        gap: 25px;
        margin-top: 20px;
    }

    .portfolio-item {
        background-color: #fff;
        border: 1px solid #e9ecef;
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
        transition: all 0.3s ease;
        cursor: pointer;
    }

    .portfolio-item:hover {
        transform: translateY(-5px);
        box-shadow: 0 12px 25px rgba(0, 0, 0, 0.15);
    }

    .project-image {
        position: relative;
        height: 200px;
        overflow: hidden;
    }

    .project-image img {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .image-placeholder {
        width: 100%;
        height: 100%;
        background: linear-gradient(135deg, #007bff, #0056b3);
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 3em;
        font-weight: bold;
    }

    .project-overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: rgba(0, 0, 0, 0.7);
        display: flex;
        align-items: center;
        justify-content: center;
        opacity: 0;
        transition: opacity 0.3s ease;
    }

    .portfolio-item:hover .project-overlay {
        opacity: 1;
    }

    .view-btn {
        background-color: #007bff;
        color: white;
        border: none;
        padding: 10px 20px;
        border-radius: 5px;
        cursor: pointer;
        font-size: 14px;
        transition: background-color 0.3s ease;
    }

    .view-btn:hover {
        background-color: #0056b3;
    }

    .project-info {
        padding: 20px;
    }

    .project-info h3 {
        color: #333;
        margin-bottom: 5px;
        font-size: 1.3em;
    }

    .project-category {
        color: #007bff;
        font-size: 0.9em;
        font-weight: 600;
        margin-bottom: 10px;
        text-transform: uppercase;
    }

    .project-description {
        color: #666;
        margin-bottom: 15px;
        line-height: 1.5;
        font-size: 0.95em;
    }

    .tech-tags {
        display: flex;
        gap: 6px;
        flex-wrap: wrap;
        margin-bottom: 15px;
    }

    .tech-tag {
        background-color: #e9ecef;
        color: #495057;
        padding: 4px 8px;
        border-radius: 12px;
        font-size: 0.8em;
        font-weight: 500;
    }

    .project-meta {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding-top: 15px;
        border-top: 1px solid #e9ecef;
    }

    .project-duration {
        color: #666;
        font-size: 0.9em;
    }

    .project-status {
        padding: 4px 8px;
        border-radius: 4px;
        font-size: 0.8em;
        font-weight: 600;
        text-transform: uppercase;
    }

    .project-status.completed {
        background-color: #d4edda;
        color: #155724;
    }

    .project-status.in-progress {
        background-color: #fff3cd;
        color: #856404;
    }

    .no-projects {
        text-align: center;
        padding: 40px;
        color: #666;
    }

    @@media (max-width: 768px) {
        .portfolio-container {
            padding: 20px;
        }
        
        .portfolio-grid {
            grid-template-columns: 1fr;
        }
        
        .portfolio-filters {
            justify-content: center;
        }
        
        .filter-btn {
            flex: 1;
            min-width: 100px;
        }
    }
</style>